/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AirlineTicket, AirlineTicketInterface } from "../AirlineTicket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BusinessClassPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EconomyClassPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FirstClassPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_whiteListAddress",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "passenger",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "destination",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "passportID",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "class",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_destination",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_passportID",
        type: "uint256",
      },
      {
        internalType: "enum AirlineTicket.PlaneClass",
        name: "_class",
        type: "uint8",
      },
    ],
    name: "passengerData",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_destination",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_passportID",
        type: "uint256",
      },
      {
        internalType: "enum AirlineTicket.PlaneClass",
        name: "_class",
        type: "uint8",
      },
    ],
    name: "receiveEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "remaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_whiteListAddress",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whiteListAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526611c37937e080006000556618de76816d8000600155662386f26fc1000060025534801561003157600080fd5b50600480546001600160a01b031916339081179091556000908152600660205260409020805460ff19166001179055610b0a8061006f6000396000f3fe6080604052600436106100c75760003560e01c80636e93b78f1161007457806392bcc8c81161004e57806392bcc8c814610231578063c4d21dc414610247578063d1a12c301461027757600080fd5b80636e93b78f146101a95780638da5cb5b146101c9578063920674dc1461020157600080fd5b80633af32abf116100a55780633af32abf1461012157806355234ec01461016f57806363c1a9a81461019357600080fd5b80630a3b0a4f146100cc5780631e53a67a146100ee57806329092d0e14610101575b600080fd5b3480156100d857600080fd5b506100ec6100e73660046108be565b61028d565b005b6100ec6100fc366004610991565b610362565b34801561010d57600080fd5b506100ec61011c3660046108be565b6103e1565b34801561012d57600080fd5b5061015a61013c3660046108be565b6001600160a01b031660009081526006602052604090205460ff1690565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b5061018560035481565b604051908152602001610166565b34801561019f57600080fd5b5061018560025481565b3480156101b557600080fd5b5061015a6101c4366004610991565b6104ae565b3480156101d557600080fd5b506004546101e9906001600160a01b031681565b6040516001600160a01b039091168152602001610166565b34801561020d57600080fd5b5061015a61021c3660046108be565b60066020526000908152604090205460ff1681565b34801561023d57600080fd5b5061018560015481565b34801561025357600080fd5b506102676102623660046108be565b610547565b6040516101669493929190610a62565b34801561028357600080fd5b5061018560005481565b6004546001600160a01b031633146102ec5760405162461bcd60e51b815260206004820152601260248201527f6f6e6c79206f776e657220616c6c6f776564000000000000000000000000000060448201526064015b60405180910390fd5b3360009081526006602052604090205460ff1661033e5760405162461bcd60e51b815260206004820152601060248201526f1b9bdd081dda1a5d19481b1a5cdd195960821b60448201526064016102e3565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b3460025411158061037557503460015411155b8061038257503460005411155b6103ce5760405162461bcd60e51b815260206004820152601060248201527f6e6f7420656e6f7567682065746865720000000000000000000000000000000060448201526064016102e3565b6103da848484846104ae565b5050505050565b6004546001600160a01b0316331461043b5760405162461bcd60e51b815260206004820152601260248201527f6f6e6c79206f776e657220616c6c6f776564000000000000000000000000000060448201526064016102e3565b3360009081526006602052604090205460ff1661048d5760405162461bcd60e51b815260206004820152601060248201526f1b9bdd081dda1a5d19481b1a5cdd195960821b60448201526064016102e3565b6001600160a01b03166000908152600660205260409020805460ff19169055565b336000908152600560209081526040822086516104cd92880190610825565b5033600090815260056020908152604090912085516104f492600190920191870190610825565b5033600090815260056020526040902060020183905561051382610707565b336000908152600560209081526040909120825161053b936003909201929190910190610825565b50600195945050505050565b60056020526000908152604090208054819061056290610aac565b80601f016020809104026020016040519081016040528092919081815260200182805461058e90610aac565b80156105db5780601f106105b0576101008083540402835291602001916105db565b820191906000526020600020905b8154815290600101906020018083116105be57829003601f168201915b5050505050908060010180546105f090610aac565b80601f016020809104026020016040519081016040528092919081815260200182805461061c90610aac565b80156106695780601f1061063e57610100808354040283529160200191610669565b820191906000526020600020905b81548152906001019060200180831161064c57829003601f168201915b50505050509080600201549080600301805461068490610aac565b80601f01602080910402602001604051908101604052809291908181526020018280546106b090610aac565b80156106fd5780601f106106d2576101008083540402835291602001916106fd565b820191906000526020600020905b8154815290600101906020018083116106e057829003601f168201915b5050505050905084565b6060600282600281111561071d5761071d610ae7565b60ff16111561072b57600080fd5b81600281111561073d5761073d610ae7565b61077a57505060408051808201909152600581527f6669727374000000000000000000000000000000000000000000000000000000602082015290565b81600281111561078c5761078c610ae7565b600114156107cd57505060408051808201909152600881527f627573696e657373000000000000000000000000000000000000000000000000602082015290565b8160028111156107df576107df610ae7565b6002141561082057505060408051808201909152600781527f65636f6e6f6d7900000000000000000000000000000000000000000000000000602082015290565b919050565b82805461083190610aac565b90600052602060002090601f0160209004810192826108535760008555610899565b82601f1061086c57805160ff1916838001178555610899565b82800160010185558215610899579182015b8281111561089957825182559160200191906001019061087e565b506108a59291506108a9565b5090565b5b808211156108a557600081556001016108aa565b6000602082840312156108d057600080fd5b81356001600160a01b03811681146108e757600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261091557600080fd5b813567ffffffffffffffff80821115610930576109306108ee565b604051601f8301601f19908116603f01168101908282118183101715610958576109586108ee565b8160405283815286602085880101111561097157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156109a757600080fd5b843567ffffffffffffffff808211156109bf57600080fd5b6109cb88838901610904565b955060208701359150808211156109e157600080fd5b506109ee87828801610904565b93505060408501359150606085013560038110610a0a57600080fd5b939692955090935050565b6000815180845260005b81811015610a3b57602081850181015186830182015201610a1f565b81811115610a4d576000602083870101525b50601f01601f19169290920160200192915050565b608081526000610a756080830187610a15565b8281036020840152610a878187610a15565b90508460408401528281036060840152610aa18185610a15565b979650505050505050565b600181811c90821680610ac057607f821691505b60208210811415610ae157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea164736f6c634300080c000a";

type AirlineTicketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirlineTicketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirlineTicket__factory extends ContractFactory {
  constructor(...args: AirlineTicketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AirlineTicket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AirlineTicket> {
    return super.deploy(overrides || {}) as Promise<AirlineTicket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AirlineTicket {
    return super.attach(address) as AirlineTicket;
  }
  connect(signer: Signer): AirlineTicket__factory {
    return super.connect(signer) as AirlineTicket__factory;
  }
  static readonly contractName: "AirlineTicket";
  public readonly contractName: "AirlineTicket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirlineTicketInterface {
    return new utils.Interface(_abi) as AirlineTicketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirlineTicket {
    return new Contract(address, _abi, signerOrProvider) as AirlineTicket;
  }
}
